// Some function definitions
constant DOMAIN: func(1, [@(0); @(1); bool])
constant DOMAIN_FN: func(1, [@(0); @(1)])

// Quals
qualif LtTen(v:int): v < 10
qualif EqPtr(v:ptr, q:ptr): DEREF([v]) = DEREF([q + 4])
qualif NNTabFound(v:ptr, a:int): v != 0 => (DEREF([v]) : int) = a
//qualif DomainField(v:ptr, p:ptr): ? DOMAIN([v; DEREF([p])])
//qualif DomainField(v:ptr): ? DOMAIN([v; DEREF([v + 4])])

//qualif Domain1(v:ptr): ? DOMAIN([v;v])
//qualif Domain1(v:int): ? DOMAIN([v;v])
//qualif Domain1(v:int,a:int): ? DOMAIN([v;a])

qualif Tabs(v:ptr): (v != 0) => ((v + 40) <= BLOCK_END([v]))

qualif DomainEq1(v:int, p:ptr): DOMAIN_FN([v]) = DOMAIN_FN([p])
qualif DomainEq2(v:ptr, p:int): DOMAIN_FN([v]) = DOMAIN_FN([p])
qualif DomainEq3(v:ptr, p:ptr): DOMAIN_FN([v]) = DOMAIN_FN([p])
qualif DomainEq4(v:int, p:int): DOMAIN_FN([v]) = DOMAIN_FN([p])
qualif DomainEq5(v:int, p:int): DOMAIN_FN([v]) = DOMAIN_FN([(DEREF([p+4]):int)])

qualif GrdDomainEq(v:int, s:ptr, t:ptr): v = 0 => DOMAIN_FN([s]) = DOMAIN_FN([t])
